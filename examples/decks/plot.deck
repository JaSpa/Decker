{deck}
version:1
card:0
size:[512,342]
name:"Plot"
author:"John Earnest"

{fonts}
deckbuilder:"%%"

{card:home}
{widgets}
field1:{"type":"field","size":[308,72],"pos":[102,28],"locked":1,"border":0,"align":"center","value":{"text":["","Plot:\n","a simple graphing module for Decker"],"font":["","deckbuilder","menu"],"arg":["","",""]}}
button1:{"type":"button","size":[109,24],"pos":[37,126],"script":"home.0","text":"label"}
button2:{"type":"button","size":[109,24],"pos":[37,174],"script":"home.0","text":"scatter"}
button3:{"type":"button","size":[109,24],"pos":[37,203],"script":"home.0","text":"line"}
button4:{"type":"button","size":[109,24],"pos":[37,261],"script":"home.0","text":"bar"}
button5:{"type":"button","size":[109,24],"pos":[37,290],"script":"home.0","text":"box"}
field2:{"type":"field","size":[229,161],"pos":[214,139],"locked":1,"value":"The plot module provides a set of functions for drawing basic data visualizations: scatterplots, lineplots, bar charts, and box-and-whisker charts.\n\nEach function takes a canvas and a data source, and draws the plot to fill the canvas, complete with margins, axes, and labels, as appropriate. Axis ranges and ticks are automatically computed from the dataset.\n\nYou can use plot by importing the module from this deck into your own decks, using the Font/DA mover.\n\nFor details and examples, click one of the buttons to the left."}
button6:{"type":"button","size":[109,24],"pos":[37,232],"script":"home.0","text":"hist"}

{script:home.0}
on click do
 go[me.text]
end
{end}

{card:label}
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"border":0,"align":"center","value":{"text":["","Label"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,226],"pos":[18,83],"value":{"text":["","label[ticks min max]","\n\nGenerate a list of aesthetically-pleasing axis labels given a minimum and maximum interval using Paul Heckbert's \"loose labels\" method.\n\n\"ticks\" is the number of labels to provide. the built-in plotting functions use 5.\n\n\"min\" and \"max\" are numbers."],"font":["","mono",""],"arg":["","",""]}}
field3:{"type":"field","size":[227,225],"pos":[263,83],"scrollbar":1,"style":"code","value":"\nplot.label[5 -.34 2.812]\n# (-1,0,1,2,3)\n\nplot.label[10 241 999]\n# (200,400,600,800,1000)\n\n"}

{script:label.0}
on click do
 go["home"]
end
{end}

{card:scatter}
script:"scatter.0"
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"locked":1,"border":0,"align":"center","value":{"text":["","Scatter"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,111],"pos":[18,83],"locked":1,"value":{"text":["","scatter[canvas data]","\n\n\"canvas\" is any canvas widget.\n\n\"data\" is a list or table. if it's a list, interpret it as the y axis, with an implicit sequential x axis. if it's a table, look for columns x, y, and g (group). With a \"g\" column, group by that column to form multiple series, which will each be assigned a distinct pattern."],"font":["","mono",""],"arg":["","",""]}}
target:{"type":"canvas","size":[225,112],"pos":[267,81],"image":"%%IMG2AOEAcAD/AP8A/wD/AP8AUgEBAAMBBQDXAQIAAwEBANwBAQADAQQA2QEBAAcBAQDYAQEABwEBAAQBAwDRAQEAAwEBAAMBAQAGAQEA0QEBAAQBAwAHAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQB2DQMAZwEBAHUNBQBmAQEAdQ0FAGYBAQBeAQMABw0DAAoNBQBmAQEAXQEFAAUNBQAKDQMAZwEBAF0BBQAFDQUAZQEBAAQBAwAHAQEAXQEFAAUNBQBkAQIAAwEBAAMBAQAGAQEAXgEDAAcNAwBmAQEAAwEBAAMBAQAGAQEA0QEBAAMBAQADAQEABgEBANEBAQADAQEAAwEBAAQBAwDRAQEAAwEBAAMBAQAGAQEA0QEBAAQBAwAHAQEA4AEBAOABAQDgAQEA4AEBAJ0BAwBAAQEAnAEFAD8BAQCcAQUAPwEBAJwBBQA/AQEAiQEDABEBAwBAAQEAiAEFAFMBAQCIAQUAUwEBAIgBBQBTAQEAiQEDAFQBAQDVAQUABgEBANUBAQAKAQEA1QEEAAcBAQDZAQEABgEBANkBAQAEAQMA1QEBAAMBAQAGAQEA1gEDAAcBAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA1gEDAAcBAQDVAQEAAwEBAAYBAQDVAQEAAwEBAAYBAQDVAQEAAwEBAAYBAQDVAQEAAwEBAAQBAwDVAQEAAwEBAAYBAQDWAQMABwEBAOABAQDgAQEA4AEBAOABAQACAQMA2wEBAAEBBQDaAQEAAQEFANoBAQABAQUA2gEBAAIBAwDbAQEA4AEBAOABAQDgAQEA4AEBANUBBQAGAQEA1QEBAAoBAQDVAQQABwEBANABBAAFAQEABgEBANkBAQAEAcQAFAEBAAMBAQAGAQEALwEBAC8BAQAvAQEAMAEBABUBAwAHAQEALwEBAC8BAQAvAQEAMAEBAP8A/wDDAQEABAEDACcBAwArAQEABAEDACcBAwADAQMAJwEFAAIBAwAaAQIAAwEBAAMBAQAlAQEAAwEBACkBAgADAQEAAwEBACUBAQADAQEAAQEBAAMBAQApAQEAAgEBAAMBAQAaAQEAAwEBAAMBAQAlAQEAAwEBACoBAQADAQEAAwEBACkBAQABAQEAAwEBACgBAQADAQEAAwEBABMBBAADAQEAAwEBAAMBAQAlAQEAAwEBACoBAQADAQEAAwEBACgBAQACAQEAAwEBACcBAwACAQEAAwEBABoBAQADAQEAAwEBACUBAQADAQEAKgEBAAMBAQADAQEAJwEBAAMBAQADAQEAKgEBAAEBAQADAQEAGgEBAAMBAQADAQEAJQEBAAMBAQAqAQEAAwEBAAMBAQAmAQEABAEBAAMBAQAmAQEAAwEBAAEBAQADAQEAGgEBAAQBAwAnAQMAKwEBAAQBAwAmAQUAAgEDACgBAwADAQMA/wD/AP8A/wD/AP8A/wD2","brush":3,"pattern":13,"scale":1}
code:{"type":"field","size":[233,98],"pos":[17,204],"scrollbar":1,"style":"code","value":"# render a table\nplot.scatter[canvas data.value]\n\n# render a plain list\nd:100,115,210,120,93,130\n#plot.scatter[canvas d]"}
field3:{"type":"field","size":[148,15],"pos":[59,304],"locked":1,"border":0,"style":"plain","align":"center","value":"(press shift+enter to refresh)"}
data:{"type":"grid","size":[223,99],"pos":[268,203],"script":"scatter.1","lines":1,"value":{"x":[10,15,23,19,12,-9],"y":[11,12,8,7,11,-2],"g":["A","B","A","A","B","A"]}}

{script:scatter.0}
on view do
 ret:eval[code.text ().canvas:target 1]
 if ret.error alert["Error: '%s'" format ret.error] end
end

on run do
 view[]
end

{end}

{script:scatter.1}
on change do
 view[]
end
{end}

{card:line}
script:"scatter.0"
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"locked":1,"border":0,"align":"center","value":{"text":["","Line"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,111],"pos":[18,83],"locked":1,"value":{"text":["","line[canvas data]","\n\n\"canvas\" is any canvas widget.\n\n\"data\" is a list or table. if it's a list, interpret it as the y axis, with an implicit sequential x axis. if it's a table, look for columns x, y, and g (group). With a \"g\" column, group by that column to form multiple series, which will each be assigned a distinct pattern."],"font":["","mono",""],"arg":["","",""]}}
target:{"type":"canvas","size":[225,112],"pos":[267,81],"image":"%%IMG2AOEAcAD/AP8A/wD/AP8AUgEBAAMBBQDXAQIAAwEBANwBAQADAQQA2QEBAAcBAQDDDQUAEAEBAAcBAQAEAQMAsg0QAA8BAQADAQEAAwEBAAYBAQCoDRkAEAEBAAQBAwAHAQEAnw0dACQBAQCVDR0ALgEBAIsNHQA4AQEAgQ0eAEEBAQB4DR0ASwEBAG4NHQBVAQEAZA0dAF8BAQBfDRkAaAEBAF4NEAByAQEAXA0IAHwBAQBbDQQAgQEBAFoNBACCAQEAWQ0DAAMBAQCAAQEAVw0EAAIBBQB+AQEAVg0EAAEBCAB9AQEAVQ0EAQYAAQEFAHsBAQBTDQQBBgAFAQQAegEBAFINBAEFAAgBBAB5AQEAUQ0EAQQADAEEAHcBAQBQDQMBBAAPAQQAZwEBAAQBAwAHAQEATg0EAQQAEQEFAGQBAgADAQEAAwEBAAYBAQBNDQQBAwAVAQQAZAEBAAMBAQADAQEABgEBAEwNBAECABgBBQBiAQEAAwEBAAMBAQAGAQEASw0DAQIAHAEEAGEBAQADAQEAAwEBAAQBAwBJDQQBAgAeAQUAXwEBAAMBAQADAQEABgEBAEcBAQ0EAQEAIgEEAF4BAQAEAQMABwEBAEYBAQ0EACUBBQBrAQEARAECDQMAKQEEAGoBAQBCAQINBAArAQQAaQEBAEABAw0EAC4BBABGAQIAHwEBAD8BAw0EADABBABCAQYAHgEBAD0BBA0DADMBBQA9AQgAHwEBADsBBA0EADYBBAA5AQkAIQEBADkBBQ0EADgBBQA0AQkAJAEBADcBBg0EADsBBAAwAQkAJwEBADYBBQ0EAD4BBQArAQkAKgEBADQBBQABDQQAQQEEACcBCQAtAQEAMgEFAAINBABDAQUAIQEKADABAQAwAQYAAg0DAEcBBAAdAQoAMwEBAC0BBwACDQQASQEEABkBCgA2AQEAKQEJAAMNBABMAQQAFAEJADoBAQAlAQsABA0EAE4BBAAQAQkAPQEBACABDQAGDQMAUQEFAAsBCQBAAQEAHAENAAgNBABUAQQABwEJAEMBAQAXAQ4ACw0EAFYBBQACAQkARgEBABMBDQANDQYAWQELAEkBAQAPAQ0ADA0JAFwBBwBBAQUABgEBAAoBDQAMDQ0AXwECAEQBAQAKAQEABgENAAwNDgCoAQQABwEBAAIBDQALDQ4AsQEBAAYBCwALDQ4AtgEBAAQBCQAKDQ8AtgEBAAMBAQAGAQMACQ0PALwBAwAHAQEABw0OAMsBAQACDQ4A0A0MANQNCQDZDQMA3gEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBAOABAQDgAQEA4AEBANYBAwAHAQEA1QEBAAMBAQAGAQEA1QEBAAMBAQAGAQEA1QEBAAMBAQAGAQEA1QEBAAMBAQAEAcQAFAEBAAMBAQAGAQEALwEBAC8BAQAvAQEAMAEBABUBAwAHAQEALwEBAC8BAQAvAQEAMAEBAP8A/wDDAQEALgEDACwBBQAuAQEALQEFABwBAgAtAQEAAwEBAC4BAQAuAQIALQEBACEBAQAxAQEALQEBAC4BAQABAQEALQEEAB4BAQAwAQEALQEDACwBAQACAQEAMQEBAB0BAQAvAQEAMQEBACsBBQAwAQEAHQEBAC4BAQAuAQEAAwEBAC4BAQAtAQEAAwEBAB0BAQAtAQUALAEDAC8BAQAuAQMA/wD/AP8A/wD/AP8A/wD5","brush":1,"pattern":13,"scale":1}
code:{"type":"field","size":[233,98],"pos":[17,204],"scrollbar":1,"style":"code","value":"# render a table\nplot.line[canvas data.value]\n\n# render a plain list\nd:100,115,210,120,93,130\n#plot.line[canvas d]"}
field3:{"type":"field","size":[148,15],"pos":[59,304],"locked":1,"border":0,"style":"plain","align":"center","value":"(press shift+enter to refresh)"}
data:{"type":"grid","size":[223,99],"pos":[268,203],"script":"scatter.1","lines":1,"value":{"x":[1,2,3,4,5,1,2,3,5],"y":[5,7,12,6,9,4,6,13,15],"g":[0,0,0,0,0,1,1,1,1]}}

{card:bar}
script:"scatter.0"
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"locked":1,"border":0,"align":"center","value":{"text":["","Bar"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,111],"pos":[18,83],"locked":1,"value":{"text":["","bar[canvas data]","\n\n\"canvas\" is any canvas widget.\n\n\"data\" is a dictionary of numbers. Keys of the dictionary are used as axis labels."],"font":["","mono",""],"arg":["","",""]}}
target:{"type":"canvas","size":[224,218],"pos":[267,81],"image":"%%IMG2AOAA2gD/AP8A/wD/AP8A/wD/AP8A8AEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wErALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQCoAQIACwEBDSkBAQCpAQEACwEBDSkBAQCaAQIAAgEDAAIBAwADAQEAAgECAAcBAQ0pAQEAnAEBAAEBAQACAQEAAQEBAAIBAQACAQEAAQEBAAIBAQAGAQENKQEBAJoBAwABAQEAAgEBAAEBAQACAQEAAgEBAAEBBAAGAQENKQEBAJkBAQACAQEAAQEBAAIBAQABAQEAAgEBAAIBAQABAQEACQEBDSkBAQCaAQMAAQEDAAIBAwADAQEAAgECAAcBAQ0pAQEAngEBAAQBAQARAQENKQEBAJ4BAQAEAQEAEQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1AQENKQEBALUBAQ0pAQEAtQEBDSkBAQC1ASsAtQEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BoABAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAHQEBACIBAQ2eAQEAHQEBACIBAQ2eAQEAHQEDAAMBAgACAQMAAwECAAIBAwADAQIABwEBDZ4BAQAdAQEAAgEBAAQBAQABAQEAAgEBAAQBAQABAQEAAgEBAAQBAQAGAQENngEBAB0BAQACAQEAAgEDAAEBAQACAQEAAgEDAAEBAQACAQEAAgEDAAYBAQ2eAQEAHQEBAAIBAQABAQEAAgEBAAEBAQACAQEAAQEBAAIBAQABAQEAAgEBAAEBAQACAQEABgEBDZ4BAQAdAQMAAwEDAAEBAQACAQEAAgEDAAEBAQACAQEAAgEDAAYBAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABAQ2eAQEAQAEBDZ4BAQBAAQENngEBAEABoABAAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wF+AGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBEAQEAHQEBDXwBAQBEAQEAHQEBDXwBAQBAAQIAAgEDAAMBAgACAQEAAQECAAEBAQABAQIAAQEBAAIBAQAGAQENfAEBAD8BAQACAQEAAQEBAAIBAQABAQEAAgEBAAEBAgADAQIAAwEBAAIBAQAGAQENfAEBAD8BAQAEAQEAAgEBAAEBBAABAQEABAEBAAQBAQACAQEABgEBDXwBAQA/AQEAAgEBAAEBAQACAQEAAQEBAAQBAQAEAQEABAEBAAIBAQAGAQENfAEBAEABAgACAQEAAgEBAAIBAgACAQEABAEBAAUBAwAGAQENfAEBAFsBAQAGAQENfAEBAFkBAgAHAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBAQ18AQEAYgEBDXwBAQBiAQENfAEBAGIBfgBiAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wGvADEBAQAqAQEAKwEBACoBAQArAQEAMQEBACoBAQArAQEAKgEBACsBAQD/AP8A0QEDACYBAQAEAQMAIwEDAAMBAwAhAQUAAgEDACUBAQADAQMAKwEBAAMBAQAkAQIAAwEBAAMBAQAhAQEAAwEBAAEBAQADAQEAIwEBAAIBAQADAQEAIwECAAIBAQADAQEAKgEBAAMBAQAlAQEAAwEBAAMBAQAlAQEAAQEBAAMBAQAiAQEAAwEBAAMBAQAiAQEAAQEBAAIBAQADAQEAKgEBAAMBAQAlAQEAAwEBAAMBAQAkAQEAAgEBAAMBAQAhAQMAAgEBAAMBAQAhAQEAAgEBAAIBAQADAQEAKgEBAAMBAQAlAQEAAwEBAAMBAQAjAQEAAwEBAAMBAQAkAQEAAQEBAAMBAQAhAQUAAQEBAAMBAQAqAQEAAwEBACUBAQADAQEAAwEBACIBAQAEAQEAAwEBACABAQADAQEAAQEBAAMBAQAkAQEAAgEBAAMBAQArAQMAJgEBAAQBAwAiAQUAAgEDACIBAwADAQMAJQEBAAMBAwD/AP8A/wD/AP8A/wD/AO0=","scale":1}
code:{"type":"field","size":[233,98],"pos":[17,204],"scrollbar":1,"style":"code","value":"t:()\nt.apple:10\nt.banana:37\nt.cherry:29\n\nplot.bar[canvas t]\n"}
field3:{"type":"field","size":[148,15],"pos":[59,304],"locked":1,"border":0,"style":"plain","align":"center","value":"(press shift+enter to refresh)"}

{card:hist}
script:"scatter.0"
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"locked":1,"border":0,"align":"center","value":{"text":["","Hist"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,111],"pos":[18,83],"locked":1,"value":{"text":["","hist[canvas data]","\n\n\"canvas\" is any canvas widget.\n\n\"data\" is a list of y values."],"font":["","mono",""],"arg":["","",""]}}
target:{"type":"canvas","size":[224,218],"pos":[267,81],"image":"%%IMG2AOAA2gD/AP8A/wD/AP8ASwEDAAIBBQACAQMA0AEBAAMBAQABAQEABQEBAAMBAQDTAQEAAQEEAAIBAQADAQEA0gEBAAYBAQABAQEAAwEBANEBAQAHAQEAAQEBAAMBAQAEAQMAyQEBAAQBAQADAQEAAQEBAAMBAQAGAQEAyAEFAAIBAwADAQMABwEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEA3wEBAN8BAQDfAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAbQEDAAMBAwADAQMABwEBADwNIABsAQEAAwEBAAEBAQADAQEAAQEBAAMBAQAGAQEAPA0gAHABAQABAQEAAwEBAAEBAQADAQEABgEBADwNIABvAQEAAgEBAAMBAQABAQEAAwEBAAYBAQA8DSAAbgEBAAMBAQADAQEAAQEBAAMBAQAEAQMAPA0gAG0BAQAEAQEAAwEBAAEBAQADAQEABgEBADwNIABsAQUAAgEDAAMBAwAHAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAbgEBAAMBBQACAQMABwEBADwNIABtAQIAAwEBAAUBAQADAQEABgEBADwNIABuAQEAAwEEAAIBAQADAQEABgEBADwNIABuAQEABwEBAAEBAQADAQEABgEBADwNIABuAQEABwEBAAEBAQADAQEABAEDADwNIABuAQEAAwEBAAMBAQABAQEAAwEBAAYBAQA8DSAAbgEBAAQBAwADAQMABwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAIMBAQA8DSAAgwEBADwNIACDAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0gAD0NIAAmAQEAPA0/AB4NIAAmAQEAPA0/AB4NIAAmAQEAPA0/AB4NIAAmAQEAPA0/AB4NIAAmAQEAPA0/AB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAAmAQEAHQ1eAB4NIAARAQEABAEDAAMBAwAHAQEAHQ1eAB4NIAAQAQIAAwEBAAMBAQABAQEAAwEBAAYBAQAdDV4AHg0gABEBAQADAQEAAwEBAAEBAQADAQEABgEBAB0NXgAeDSAAEQEBAAMBAQADAQEAAQEBAAMBAQAGAQEAHQ1eAB4NIAARAQEAAwEBAAMBAQABAQEAAwEBAAQBAw17AB4NIAARAQEAAwEBAAMBAQABAQEAAwEBAAYBAQ17AB4NIAARAQEABAEDAAMBAwAHAQENewAeDSAAJgEBDXsAHg0gACYBAQ17AB4NIAAmAQENewAeDSAAJgEBDXsAHg0gACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ACYBAQ25ABUBBQACAQMABwEBDbkAFQEBAAUBAQADAQEABgEBDbkAFQEEAAIBAQADAQEABgEBDbkAGQEBAAEBAQADAQEABgEBDbkAGQEBAAEBAQADAQEABAG8ABUBAQADAQEAAQEBAAMBAQAVAQEAHgEBAB4BAQAeAQEAHgEBAB4BAQAlAQMAAwEDABYBAQAeAQEAHgEBAB4BAQAeAQEAHgEBAP8A/wDkAQMAHQEBAB0BAwAbAQUAHQEBABsBBQBAAQEAAwEBABsBAgAcAQEAAwEBAB0BAQAdAQIAGwEBAEQBAQADAQEAHAEBACABAQAcAQEAHQEBAAEBAQAbAQQAQQEBAAMBAQAcAQEAHwEBABwBAwAbAQEAAgEBAB8BAQBAAQEAAwEBABwBAQAeAQEAIAEBABoBBQAeAQEAQAEBAAMBAQAcAQEAHQEBAB0BAQADAQEAHQEBABsBAQADAQEAQQEDAB0BAQAcAQUAGwEDAB4BAQAcAQMA/wD/AP8A/wD/AP8A/wD/AAE=","scale":1}
code:{"type":"field","size":[233,98],"pos":[17,204],"scrollbar":1,"style":"code","value":"d:100,115,210,120,93,130\n\nplot.hist[canvas d]\n"}
field3:{"type":"field","size":[148,15],"pos":[59,304],"locked":1,"border":0,"style":"plain","align":"center","value":"(press shift+enter to refresh)"}

{card:box}
script:"scatter.0"
{widgets}
button1:{"type":"button","size":[75,29],"pos":[18,32],"script":"label.0","text":"Back"}
field1:{"type":"field","size":[250,38],"pos":[125,27],"locked":1,"border":0,"align":"center","value":{"text":["","Box"],"font":["","deckbuilder"],"arg":["",""]}}
field2:{"type":"field","size":[231,111],"pos":[18,83],"locked":1,"value":{"text":["","box[canvas data]","\n\n\"canvas\" is any canvas widget.\n\n\"data\" is a dictionary of lists. Keys of the dictionary are used as axis labels. If a value contains two numbers, draw it as a range. Three numbers are drawn with a median line, and five numbers are drawn as a box with whiskers."],"font":["","mono",""],"arg":["","",""]}}
target:{"type":"canvas","size":[224,218],"pos":[267,81],"image":"%%IMG2AOAA2gD/AP8A/wD/AP8A/wD/AP8A/wAYEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEAxAEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAcgECAAIBAwADAQIAGQEBABoSAQAsAQEAcQEBAAIBAQABAQEAAgEBAAEBAQACAQEAGAEBABoSAQAsAQEAcQEBAAIBAQABAQEAAgEBAAEBBAAYAUkAcQEBAAIBAQABAQEAAgEBAAEBAQAbAQEAGhIBACwBAQByAQIAAgEBAAIBAQACAQIAGQEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAlwEBABoSAQAsAQEAshIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQAIAX8AWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBABYBAQBBEgEACAEBAGMBAQAZAQEAFgEBAEESAQAIAQEAYwEBABkBAQAVAQMAAQEBAAUBAQACAQIANBIBAAgBAQBjAQEAGQEBABYBAQADAQEAAQEBAAEBAQACAQEAAgEBADMSAQAIAQEAYwEBABkBAQAWAQEAAwEBAAEBAQABAQEAAgEBAAIBAQAzEgEACAEBAGMBAQAZAQEAFgEBAAQBAQABAQEAAwEBAAIBAQAzEgEACAEBAGMBAQAZAQEAFwEBAAMBAQABAQEABAECADQSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAEBAGMBAQAZAQEAWBIBAAgBAQBjAQEAGQEBAFgSAQAIAQEAYwEBABkBAQBYEgEACAF/AFgSAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQCyAQEACAFSABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAE4BAQACAQEAGAEBAAgBAQA1AQEAGgEBABoBAQBOAQEAAgEBABgBAQAIAQEANQEBABoBAQAaAQEATQEDAAEBAwACAQEAAQECAAIBAgADAQIABwEBAAgBAQA1AQEAGgEBABoBAQBOAQEAAgEBAAIBAQABAQIAAwEBAAIBAQABAQEAAgEBAAYBAQAIAQEANQEBABoBAQAaAQEATgEBAAIBAQACAQEAAQEBAAQBBAABAQQABgEKADUBAQAaARwATgEBAAIBAQACAQEAAQEBAAQBAQAEAQEACQEBAAgBAQA1AQEAGgEBABoBAQBPAQEAAQEBAAIBAQABAQEABQECAAMBAgAHAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAQEANQEBABoBAQAaAQEAagEBAAgBAQA1AQEAGgEBABoBAQBqAQEACAEBADUBAQAaAQEAGgEBAGoBAQAIAVIAGgEBAJcSAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBAN8SAQDfEgEA3xIBALIBtQArAQEALAEBACwBAQAsAQEALAEBACsBAQAsAQEALAEBACwBAQAsAQEA/wD/AM0BBQAmAQMAKQEFACcBAQAEAQMAJQEBAAMBBQAnAQEAKQEBAAMBAQAoAQEAKgECAAMBAQADAQEAIwECAAMBAQArAQQAJgEBAAMBAQAoAQQAKAEBAAMBAQADAQEAJAEBAAMBBAAjAQQABQEBACUBAQADAQEALAEBACcBAQADAQEAAwEBACQBAQAHAQEAKwEBACUBAQADAQEALAEBACcBAQADAQEAAwEBACQBAQAHAQEAJwEBAAMBAQAlAQEAAwEBACgBAQADAQEAJwEBAAMBAQADAQEAJAEBAAMBAQADAQEAKAEDACcBAwAqAQMAKAEBAAQBAwAlAQEABAEDAP8A/wD/AP8A/wD/AP8A7Q==","scale":1}
code:{"type":"field","size":[233,98],"pos":[17,204],"scrollbar":1,"style":"code","value":"t:()\nt.one:-3,5\nt.two:1,12.2,15\nt.three:-5,-4,2,5,8\n\nplot.box[canvas t]\n"}
field3:{"type":"field","size":[148,15],"pos":[59,304],"locked":1,"border":0,"style":"plain","align":"center","value":"(press shift+enter to refresh)"}

{module:plot}
description:"draw graphs and plots to canvases"
version:1.0
{script}
plot_margin: 10

on label ticks x y do
 # Paul Heckbert's "loose labels" method
 # for generating axis labels and ranges:
 on nice x round do
  f:x/10^e:floor(ln x)/(ln n:10)
  if round
   if f<7   n:5 end
   if f<3   n:2 end
   if f<1.5 n:1 end
  else
   if !f>5  n:5 end
   if !f>2  n:2 end
   if !f>1  n:1 end
  end
  n*10^e
 end
 d:nice[nice[y-x 0]/ticks 1]
 a:d* floor x/d
 b:d*-floor-y/d
 v:() while a<b+.5*d  v:v,a  a:a+d end v
end

on plot_series c data draw do
 if !"table"~typeof data
  data:select x:keys data y:value from data
 end
 nd.x:if "x" in data data.x else (update x:gindex by g from data).x end
 nd.y:if "y" in data data.y else data end
 nd.g:if "g" in data data.g else 0*nd.x end
 data:update g:group by g from table nd

 xaxis:label[5 min data.x max data.x]
 yaxis:label[5 min data.y max data.y]
 gmin:(first xaxis),first yaxis
 gmax:(last  xaxis),last  yaxis
 axes:(max each x in yaxis c.font.textsize[x][0] end),12
 psize:c.lsize-axes+2*plot_margin
 ppos:plot_margin+axes*1,0

 c.pattern:1
 c.brush:0
 c.font:"body"
 c.clear[]
 c.rect[ppos+psize*0,1  psize[0],1]
 c.rect[ppos+psize*0,1  1,-psize[1]]
 on map pos do
  r:(pos-gmin)/gmax-gmin
  ppos+psize*r[0],1-r[1]
 end
 each v in xaxis
  p:map[v,first yaxis]
  c.rect[p 1,3]
  c.text[v p+0,5 "top_center"]
 end
 each v in yaxis
  p:map[(first xaxis),v]
  c.rect[p -3,1]
  c.text[v p-5,0 "center_right"]
 end
 extract
  (c.pattern:(1,13,12,9,8,5)[first g]),
  draw[each v i in x map[v,y[i]] end]
 by g from data
end

on plot_category c data line draw do
 dmin:min 0,min data
 dmax:max 0,max data
 xaxis:label[5 dmin dmax]
 gmin:first xaxis
 gmax:last  xaxis
 axes:(max each v k in data c.font.textsize[k][0] end),12
 psize:c.lsize-axes+2*plot_margin
 ppos:plot_margin+axes*1,0

 c.pattern:1
 c.brush:0
 c.font:"body"
 c.clear[]
 c.rect[ppos+psize*0,1 psize[0],1]
 on mapx x do ppos[0]+psize[0]*(x-gmin)/gmax-gmin end
 each v in xaxis
  p:mapx[v],(ppos+psize)[1]
  c.rect[p 1,3]
  c.text[v p+0,5 "top_center"]
 end
 origin:mapx[0]
 yaxis:origin,ppos[1]
 c.pattern:line
 c.rect[yaxis 1,psize[1]]
 c.pattern:1
 bh:psize[1]/count data
 each v k i in data
  p:ppos+(0,1)*(bh*i)+bh/2
  c.text[k p-5,0 "center_right"]
  draw[origin,p[1] each x in (),v mapx[x] end bh]
 end
end

on plot_scatter c data do
 on draw d do
  c.brush:3
  each v in d c.line[v] end
 end
 plot_series[c data draw]
end

on plot_line c data do
 on draw d do
  c.brush:1
  c.line[d]
 end
 plot_series[c data draw]
end

on plot_hist c data do
 xdata:range count data
 xaxis:label[5 min xdata max xdata]
 yaxis:label[5 min  data max  data]
 if 5>count data xaxis:xdata end
 gmin:(  first xaxis),first yaxis
 gmax:(1+last  xaxis),last  yaxis
 axes:(max each x in yaxis c.font.textsize[x][0] end),12
 psize:c.lsize-axes+2*plot_margin
 ppos:plot_margin+axes*1,0
 bwid:psize[0]/count data

 c.brush:0
 c.font:"body"
 c.clear[]
 c.clip[ppos psize]
 c.pattern:13
 on map pos xoff do
  r:(pos-gmin)/gmax-gmin
  (xoff,0)+ppos+psize*r[0],1-r[1]
 end
 each v i in data
  v:map[i,v bwid/2]
  s:1+psize[1]-v[1]-ppos[1]
  c.rect[v 1+bwid,s "top_center"]
 end
 c.clip[]
 c.pattern:1
 c.rect[ppos+psize*0,1  psize[0],1]
 c.rect[ppos+psize*0,1  1,-psize[1]]
 each v in xaxis
  p:map[v,first yaxis bwid/2]
  c.rect[p 1,3]
  c.text[v p+0,5 "top_center"]
 end
 each v in yaxis
  p:map[(first xaxis),v]
  c.rect[p -3,1]
  c.text[v p-5,0 "center_right"]
 end
end

on plot_bar c data do
 on draw start stops height do
  a:start-height*0,.4
  b:((first stops)-start[0]),.8*height
  c.pattern:13
  c.rect[a b]
  c.pattern:1
  c.box[a b]
 end
 plot_category[c data 1 draw]
end

on plot_box c data do
 on draw start stops height do
  on stop x do floor stops[x],start[1] end
  on woff x do (1+x),height*.5         end
  a:stop[0]
  b:stop[-1+count stops]
  c.line[a b]
  c.rect[a woff[] "center_left"]
  c.rect[b woff[] "center_left"]
  if 2<count stops
   m:0.5*count stops
   q1:stop[m-1] q2:stop[m] q3:stop[m+1]
   c.clear[q1 woff[q3[0]-q1[0]] "center_left"]
   c.box  [q1 woff[q3[0]-q1[0]] "center_left"]
   c.rect [q2 woff[           ] "center_left"]
  end
 end
 plot_category[c data 18 draw]
end

mod.label  :label
mod.scatter:plot_scatter
mod.line   :plot_line
mod.hist   :plot_hist
mod.bar    :plot_bar
mod.box    :plot_box
{end}

